top_srcdir = @top_srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
mandir = @mandir@

CC = @CC@
CFLAGS  = @CFLAGS@ \
	@GLIB_CFLAGS@ \
	@GMP_CFLAGS@ \
	@PBC_CFLAGS@ \
	@BSWABE_CFLAGS@ \
	@DEFS@
LDFLAGS = @LDFLAGS@ \
	@GLIB_LIBS@ \
	@GMP_LIBS@ \
	@PBC_LIBS@ \
	@BSWABE_LIBS@ \
	@LIBS@

DISTNAME = @PACKAGE_TARNAME@-@PACKAGE_VERSION@

TARGETS  = easier-setup   easier-enc   easier-keygen   easier-delegate	easier-dec easier-dec_delegated	easier-revoke easier-convert gen_policy
DEVTARGS = test-lang TAGS

MANUALS  = $(TARGETS:=.1)
HTMLMANS = $(MANUALS:.1=.html)

all: $(TARGETS) $(DEVTARGS)

# user-level compilation

gen_policy: gen_policy.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-setup: setup.o common.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-enc: enc.o common.o policy_lang.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-keygen: keygen.o common.o policy_lang.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-delegate: delegate.o common.o policy_lang.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-revoke: revoke.o common.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-convert: convert.o common.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-dec: dec.o common.o
	$(CC) -o $@ $^ $(LDFLAGS)

easier-dec_delegated: dec_delegated.o common.o
	$(CC) -o $@ $^ $(LDFLAGS)

test-lang: test-lang.o common.o policy_lang.o
	$(CC) -o $@ $^ $(LDFLAGS)

%.o: %.c *.h Makefile
	$(CC) -c -o $@ $< $(CFLAGS)

# installation

dist: *.y policy_lang.c *.c *.h *.more-man \
	AUTHORS COPYING INSTALL NEWS README $(MANUALS) \
	aclocal.m4 acinclude.m4 configure configure.ac install-sh Makefile.in \
	missing mkinstalldirs
	rm -rf $(DISTNAME)
	mkdir $(DISTNAME)
	cp $^ $(DISTNAME)
	tar zc $(DISTNAME) > $(DISTNAME).tar.gz
	rm -rf $(DISTNAME)

#install: $(TARGETS)  $(MANUALS)
#	$(top_srcdir)/mkinstalldirs -m 755 $(bindir)
#	$(top_srcdir)/mkinstalldirs -m 755 $(mandir)
#	$(top_srcdir)/mkinstalldirs -m 755 $(mandir)/man1
#	for PROG in $(TARGETS); \
#	do \
#	  $(top_srcdir)/install-sh -m 755 $$PROG   $(bindir); \
#	  $(top_srcdir)/install-sh -m 644 $$PROG.1 $(mandir)/man1; \
#	done

install: $(TARGETS)
	$(top_srcdir)/mkinstalldirs -m 755 $(bindir)
	for PROG in $(TARGETS); \
	do \
	  $(top_srcdir)/install-sh -m 755 $$PROG   $(bindir); \
	done

uninstall:
	for PROG in $(TARGETS); \
	do \
	  /bin/rm -f $(bindir)/$$PROG; \
	done

# developer-level processing and meta stuff

%.c: %.y *.h Makefile
	if which bison 2> /dev/null; then \
	   bison -o $@ $<; \
	fi

%.1: % %.more-man
	if which help2man 2> /dev/null; then \
	   help2man --section=1 --source="SRI International" --no-info \
	            -I $<.more-man -o $@ ./$<; \
	fi

%.html: %.1
	groff -man -Thtml $< > $@

html: $(HTMLMANS)

TAGS: *.c *.h *.y
	@(etags $^ || true) 2> /dev/null

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

configure: configure.ac aclocal.m4 acinclude.m4
	autoconf

# cleanup

# remove everything an installing user can rebuild
clean:
	rm -f *.o $(TARGETS) $(DEVTARGS) *.tar.gz pub_key master_key priv_key pk-* mk-* sk-* rvk-* lk-* *.proxy *.cpabe *.cpaes lambda_* *~

# remove everything a package developer can rebuild
distclean: clean
	rm -rf policy_lang.c autom4te.cache Makefile config.status config.log config.cache \
		configure configure.scan autoscan*.log *.1 *.html *.lineno
